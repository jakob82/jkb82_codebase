const myChars = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];
const numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];

function footprintHasher() {
    for(let i = 0; i < Math.pow(myChars.length, numbers.length); i++) {
       
        let hash1 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash2 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash3 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash4 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash5 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash6 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash7 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash8 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash9 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash10 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash11 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash12 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash13 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash14 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash15 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash16 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash17 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash18 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash19 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash20 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash21 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash22 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash23 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash24 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);
        let hash25 = ([myChars[Math.floor(Math.random() * Math.floor(myChars.length))] + ":" + numbers[parseInt(Math.floor(Math.random() * Math.floor(numbers.length)))]]);

        console.log("xdg-open http://www.intelservices.pt/?v=" + hash1 + hash2 + hash3 + hash4 + hash5 + hash6 + hash7 + hash8 + hash9 + hash10 + hash11 + hash12 + hash13 + hash14 + hash15 + hash16 + hash17 + hash18 + hash19 + hash20 + hash21 + hash22 + hash23 + hash24 + hash25);
    
        
    }
    return 0;
};

footprintHasher();