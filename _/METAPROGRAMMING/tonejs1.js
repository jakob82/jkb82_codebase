let fs = require('fs');

let textblock;

function hashingProceduralScriptGeneration() {

    for (let i1 = 0; i1 < 2000; i1++) {

        let myToneJSscriptname = ["tonejs" + i1 + ".html"];

        console.log(myToneJSscriptname, "utf-8");

        textblock = "\n\t\t <!DOCTYPE html>"
            + "\n <html lang='en' >"
            + "\n <head>"
            + "\n   <meta charset='UTF-8'>"
            + "\n   <title>CodePen - Tone JS Tutorial Part 3</title>"
            + "\n   <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css'>"
            + "\n <link rel='stylesheet' href='style.css'>"
            + "\n </head>"
            + "\n <body>"
            + "\n <style>"
            + "\n   html, body {"
            + "\n   height: 100%;"
            + "\n }"
            + "\n header {"
            + "\n   overflow: hidden;"
            + "\n   height: 100%;"
            + "\n }"
            + "\n header input {"
            + "\n   position: absolute;"
            + "\n   left: -9999px;"
            + "\n }"
            + "\n header input#chord-1:checked ~ ul label[for='chord-1'] {"
            + "\n   background: #ff0000;"
            + "\n }"
            + "\n header input#chord-2:checked ~ ul label[for='chord-2'] {"
            + "\n   background: #ff0000;"
            + "\n }"
            + "\n header input#chord-3:checked ~ ul label[for='chord-3'] {"
            + "\n   background: #ff0000;"
            + "\n }"
            + "\n header input#chord-4:checked ~ ul label[for='chord-4'] {"
            + "\n   background: #ff0000;"
            + "\n }"
            + "\n header input#chord-5:checked ~ ul label[for='chord-5'] {"
            + "\n   background: #ff0000;"
            + "\n }"
            + "\n header ul {"
            + "\n   height: 100%;"
            + "\n   list-style: none;"
            + "\n   margin: 0;"
            + "\n   padding: 0;"
            + "\n   display: -webkit-box;"
            + "\n   display: flex;"
            + "\n }"
            + "\n header ul li {"
            + "\n   -webkit-box-flex: 1;"
            + "\n           flex: 1;"
            + "\n }"
            + "\n header ul li label {"
            + "\n   height: 100%;"
            + "\n   display: block;"
            + "\n   cursor: pointer;"
            + "\n   text-align: center;"
            + "\n   padding: 0.5rem;"
            + "\n   background: black;"
            + "\n   color: white;"
            + "\n   display: -webkit-box;"
            + "\n   display: flex;"
            + "\n   -webkit-box-orient: vertical;"
            + "\n   -webkit-box-direction: normal;"
            + "\n           flex-direction: column;"
            + "\n   -webkit-box-pack: center;"
            + "\n           justify-content: center;"
            + "\n   align-content: center;"
            + "\n   font-size: 3rem;"
            + "\n }"
            + "\n header ul li + li {"
            + "\n   border-left: 4px solid #191919;"
            + "\n }"
            + "\n </style>"
            + "\n <!-- partial:index.partial.html -->"
            + "\n <header>"
            + "\n   <input id='chord-1' value='1' type='radio' name='chord' />"
            + "\n   <input id='chord-2' value='2' type='radio' name='chord' />"
            + "\n   <input id='chord-3' value='3' type='radio' name='chord' />"
            + "\n   <input id='chord-4' value='4' type='radio' name='chord' />"
            + "\n   <input id='chord-5' value='5' type='radio' name='chord' />"
            + "\n   <ul>"
            + "\n     <li><label for='chord-1'>1</label></li>"
            + "\n     <li><label for='chord-2'>2</label></li>"
            + "\n     <li><label for='chord-3'>3</label></li>"
            + "\n     <li><label for='chord-4'>4</label></li>"
            + "\n     <li><label for='chord-5'>5</label></li>"
            + "\n   </ul>"
            + "\n   <!-- replace this by some sort of patterns sequence within the browser-->"
            + "\n </header>"
            + "\n <script>"
            + "\n   console.clear();"
            + "\n // UPDATE: there is a problem in chrome with starting audio context"
            + "\n //  before a user gesture. This fixes it."
            + "\n var started = false;"
            + "\n document.documentElement.addEventListener('mousedown', () => {"
            + "\n   if (started) return;"
            + "\n   started = true;"
            + "\n   const $inputs = document.querySelectorAll('input'),"
            + "\n   chords = ["
            + "\n   'A0 C0 E0 G0 A0 C0', 'F0 A0 C0 E0 A0 G0', 'D0 E0 F0 G0 B0 D0 F0 B0 G0',"
            + "\n   'D0 F0 A0 C0 D0 G0', 'E0 G0 B0 D0 C0 F0']."
            + "\n   map(formatChords);"
            + "\n   console.log(chords);"
            + "\n   var chordIdx = 0,"
            + "\n   step = 0;"
            + "\n   const synth = new Tone.Synth();"
            + "\n   const gain = new Tone.Gain(0.7);"
            + "\n   synth.oscillator.type = 'sine';"
            + "\n   gain.toMaster();"
            + "\n   synth.connect(gain);"
            + "\n   Array.from($inputs).forEach($input => {"
            + "\n     $input.addEventListener('change', () => {"
            + "\n       if ($input.checked) handleChord($input.value);"
            + "\n     });"
            + "\n   });"
            + "\n   function handleChord(valueString) {"
            + "\n     chordIdx = parseInt(valueString) - 1;"
            + "\n   }"
            + "\n   Tone.Transport.scheduleRepeat(onRepeat, '16n');"
            + "\n   Tone.Transport.start();"
            + "\n   Tone.Transport.bpm.value = 90;"
            + "\n   function onRepeat(time) {"
            + "\n     let chord = chords[chordIdx],"
            + "\n     note = chord[step % chord.length];"
            + "\n     synth.triggerAttackRelease(note, '16n', time);"
            + "\n     step++;"
            + "\n   }"
            + "\n   // DOWN THE LINE THIS WILL MAKE THINGS EASIER"
            + "\n   function formatChords(chordString) {"
            + "\n     let chord = chordString.split(' ');"
            + "\n     let arr = [];"
            + "\n     for (let i = 0; i < 2; i++) {"
            + "\n       for (let j = 0; j < chord.length; j++) {"
            + "\n         let noteOct = chord[j].split(''),"
            + "\n         note = noteOct[0];"
            + "\n         let oct = noteOct[1] === '0' ? i + 4 : i + 5;"
            + "\n         note += oct;"
            + "\n         arr.push(note);"
            + "\n       }"
            + "\n     }"
            + "\n     return arr;"
            + "\n   }"
            + "\n });"
            + "\n </script>"
            + "\n <!-- partial -->"
            + "\n   <script src='https://cdnjs.cloudflare.com/ajax/libs/tone/0.12.63/Tone.js'></script><script  src='./script.js'></script>"
            + "\n </body>"
            + "\n </html>";


        fs.writeFileSync("./tonejs1/" + myToneJSscriptname, textblock);

    }

    return 0;

}

hashingProceduralScriptGeneration();